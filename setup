#!/bin/bash


# Installing the gcloud CLI
setup_gcloud() {
    sudo apt-get update
    sudo apt-get install apt-transport-https ca-certificates gnupg curl
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
    echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    sudo apt-get update && sudo apt-get install google-cloud-cli

    # Authorize with a user account
    gcloud init
    gcloud auth application-default login

    # Authorize a service account using service account impersonation
    # 1. Authorize the gcloud CLI with your user identity
    # gcloud init
    # 2. Set up the gcloud CLI to use the identity and access provided by a service account by default
    # gcloud config set auth/impersonate_service_account $SERVICE_ACCT_EMAIL
    # gcloud auth application-default login --impersonate-service-account $SERVICE_ACCT_EMAIL

    # Authorize a service account using a service account key
    # gcloud auth login --cred-file=$KEY_FILE
    # export GOOGLE_APPLICATION_CREDENTIALS=$KEY_PATH

    check_gcloud_property
}


check_gcloud_property() {
    PROJECT=$(gcloud config get project)
	REGION=$(gcloud config get compute/region)
	ZONE=$(gcloud config get compute/zone)

    if [ -z "$PROJECT" ]; then
        echo "No project set. Listing available projects:"
        gcloud projects list
        while true; do
            read -p "Enter project ID from the list: " project
            if gcloud projects describe $project &> /dev/null; then
                break
            else
                echo "Invalid project ID. Please enter a valid project ID from the list."
            fi
        done
        PROJECT=$project
        gcloud config set project $PROJECT
    fi

    if [ -z "$REGION" ]; then
		if [ -z "$ZONE" ]; then
            echo "No zone set. Listing available zones:"
            cat zones.txt
            read -p "Enter zone from the list or leave blank to use the default(us-central1-b): " zone
			if [ -z "$zone" ]; then
				ZONE=us-central1-b
                echo "zone is empty"
			else
                if grep -q "$zone," zones_modified.txt; then
                    ZONE=${zone%,*}
                else
                    ZONE=us-central1-b
                fi
			fi
		fi
		REGION=${ZONE%-*}
        gcloud config set compute/region $REGION
	    gcloud config set compute/zone $ZONE
	fi
}


# Installing Python
setup_python() {
    sudo apt update
    sudo apt install python3 python3-dev python3-venv
    sudo apt-get install wget
    wget https://bootstrap.pypa.io/get-pip.py
    sudo python3 get-pip.py

    # Installing the Cloud Client Libraries for Python
    # pip install google-cloud-storage google-cloud-firestore

    # gcloud firestore databases update --database=symmetrical-acorn
}


setup_gcloud
setup_python